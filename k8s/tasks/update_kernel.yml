- name: Download kernel upgrade packages on master01.
  uri:
    url: "{{ item.key }}"
    dest: "{{ item.value }}"
    method: GET
    user: admin
    password: admin123456
  become: true
  with_dict: "{{ kernel_upgrade_packages }}"
  when: inventory_hostname == 'k8s-master01'

- name: Sync kernel upgrade packages to other nodes.
  synchronize:
    src: "/root/"
    dest: "/root/"
    rsync_opts:
      - "--include=kernel*.rpm"
      - "--exclude=*"
  become: true
  delegate_to: 'k8s-master01'
  when: inventory_hostname != 'k8s-master01'

- name: Install kernel packages
  shell: |
    cd /root
    yum localinstall -y kernel-ml*
    grub2-set-default  0 && grub2-mkconfig -o /etc/grub2.cfg
    grubby --args="user_namespace.enable=1" --update-kernel="$(grubby --default-kernel)"
  become: true

- name: Check kernel
  shell: "grubby --default-kernel"
  register: c_kernel_0
  become: true

- name: Print kernel info befor upgrade
  debug:
    msg: "{{ c_kernel_0.stdout }}"
  when: c_kernel_0 != ''
  #  notify: Reboot

- name: Reboot
  reboot: 
    reboot_timeout: 300 
  become: true

- name: Check kernel after reboot
  shell: "uname -a"
  register: c_kernel
  become: true

- name: Print kernel info after upgrade
  debug:
    msg: "{{ c_kernel.stdout }}"
  when: c_kernel != ''

- name: Install ipvsadm
  yum:
    pkg:
     - ipvsadm
     - ipset
     - sysstat
     - conntrack
     - libseccomp
  become: true
- name: Config ipvs with Command
  shell: |
    modprobe -- ip_vs
    modprobe -- ip_vs_rr
    modprobe -- ip_vs_wrr
    modprobe -- ip_vs_sh
    modprobe -- nf_conntrack
  become: true

- name: Create ipvs config file
  file:
    state: touch
    path: /etc/modules-load.d/ipvs.conf
  become: true

- name: Update ipvs config file
  lineinfile:
    dest: /etc/modules-load.d/ipvs.conf 
    line: "{{ item }}"
    state: present
  loop: "{{ config_ipvs_vars }}"
  become: true

- name: Reload  systemd-modules-load service
  systemd:
    state: restarted
    name: systemd-modules-load
    enabled: yes
  become: true

- name: Check ipvs config
  shell: "lsmod | grep -e ip_vs -e nf_conntrack"
  become: true
  register: c_ipvs

- name: Print ipvs config
  debug:
    msg: "{{ c_ipvs.stdout }}"
  when: c_ipvs != ''

- name: Motify kernel config
  shell: |
    cat <<EOF > /etc/sysctl.d/k8s.conf
    net.ipv4.ip_forward = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    fs.may_detach_mounts = 1
    vm.overcommit_memory=1
    net.ipv4.conf.all.route_localnet = 1
    
    vm.panic_on_oom=0
    fs.inotify.max_user_watches=89100
    fs.file-max=52706963
    fs.nr_open=52706963
    net.netfilter.nf_conntrack_max=2310720
    
    net.ipv4.tcp_keepalive_time = 600
    net.ipv4.tcp_keepalive_probes = 3
    net.ipv4.tcp_keepalive_intvl =15
    net.ipv4.tcp_max_tw_buckets = 36000
    net.ipv4.tcp_tw_reuse = 1
    net.ipv4.tcp_max_orphans = 327680
    net.ipv4.tcp_orphan_retries = 3
    net.ipv4.tcp_syncookies = 1
    net.ipv4.tcp_max_syn_backlog = 16384
    net.ipv4.ip_conntrack_max = 65536
    net.ipv4.tcp_max_syn_backlog = 16384
    net.ipv4.tcp_timestamps = 0
    net.core.somaxconn = 16384
    EOF
    sysctl --system  
  become: true
  #  notify: Reboot
- name: Reboot
  reboot:
    reboot_timeout: 300
  become: true
